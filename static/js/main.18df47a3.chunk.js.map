{"version":3,"sources":["context.js","components/ToDoItem/ToDoItem.js","components/ToDoList/ToDoList.js","components/Modal/Modal.js","App.js","index.js"],"names":["Context","React","createContext","ToDoItem","todo","index","toggleCompleted","removeItem","className","id","onClick","completed","title","time","value","p","fontSize","fontWeight","textAlign","ToDoList","todos","length","map","style","Modal","state","isActive","setState","this","onDoubleClick","Component","AddTodo","lazy","App","useState","setTodos","filter","getClockTime","hour","Date","getHours","minutes","getMinutes","seconds","getSeconds","Provider","Suspense","fallback","onCreate","concat","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18df47a3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React, {useContext, useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from \"../../context\";\r\nimport './ToDoItem.scss'\r\n\r\nconst ToDoItem = ({todo, index, toggleCompleted, removeItem}) => {\r\n\r\n    // const {removeItem} = useContext(Context)\r\n\r\n    const setRemovedItem = (value) => {\r\n        removeItem(value)\r\n    }\r\n\r\n    function setSolvedItem() {\r\n        toggleCompleted(todo.id)\r\n    }\r\n\r\n\r\n    return (\r\n            <li className={'item'}>\r\n            <span>\r\n                <div className={`solvedCheckout`}>\r\n                <button id='solvedCheckout' onClick={setSolvedItem} className={todo.completed ? 'active' : null}/>\r\n                </div>\r\n                <strong>{index + 1}.</strong>\r\n                <span className={todo.completed ? `title solved` : 'title'}>{todo.title}</span>\r\n                <p className='time'>{todo.time}</p>\r\n                <button className='deleteButton' onClick={() => setRemovedItem(todo.id)}></button>\r\n                {/*  Для кнопки ещё один способ обращения к removeItem: onClick={removeItem.bind(null, todo.id)  */}\r\n            </span>\r\n            </li>\r\n    )\r\n}\r\n\r\nToDoItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number,\r\n    toggleCompleted: PropTypes.func.isRequired\r\n}\r\n\r\nexport default ToDoItem","import React from 'react'\r\nimport './ToDoList.scss'\r\nimport PropTypes from 'prop-types'\r\nimport ToDoItem from \"../ToDoItem/ToDoItem\";\r\nimport {CSSTransition} from \"react-transition-group\";\r\n\r\nconst ToDoList = ({todos, toggleCompleted, removeItem}) => {\r\n\r\n    return (\r\n        <div className='listWrapper'>\r\n            {/*{loading ? <Loader/> :*/}\r\n            {todos.length ?\r\n                <ul className='listItems'>\r\n\r\n                    {\r\n                        todos.map((todo, index) => {\r\n                            return <ToDoItem key={todo.id} todo={todo} index={index}\r\n                                             toggleCompleted={toggleCompleted} removeItem={removeItem}/>\r\n                        })\r\n                    }\r\n                </ul>\r\n                : <p style={p}>You have no todos yet</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nToDoList.propTypes =\r\n{\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nconst p =\r\n{\r\n    fontSize: \"26px\",\r\n        fontWeight: \"bolder\",\r\n        textAlign: \"center\"\r\n}\r\n\r\nexport default ToDoList","import React from 'react'\r\nimport './Modal.scss'\r\n\r\nexport default class Modal extends React.Component {\r\n\r\n    state = {\r\n        isActive: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <button className='ModalButton' onClick={() => this.setState({isActive: true})}>Open modal</button>\r\n\r\n\r\n                <div className={this.state.isActive ? 'modalWindow': 'modalWindow hidden'} onDoubleClick={() => this.setState({isActive: false})}>\r\n                    <div className={this.state.isActive ? 'modalWindow-body opened' : 'modalWindow-body closed'}>\r\n                        <h1>Modal title</h1>\r\n                        <p>Do your tasks diligently!</p>\r\n                        <button onClick={() => this.setState({isActive: false})} className='ModalButton'>Close Modal</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\nimport ToDoList from \"./components/ToDoList/ToDoList\";\nimport Modal from \"./components/Modal/Modal\";\nimport Context from \"./context\";\nimport './App.scss';\n\nconst AddTodo = React.lazy(() => import('./components/AddTodo/AddTodo'))\n\n\nfunction App() {\n    const [todos, setTodos] = React.useState([\n        {\n            \"userId\": 1,\n            \"id\": 1,\n            \"title\": \"delectus aut autem\",\n            \"completed\": false,\n            \"time\": '15:43:12'\n        },\n        {\n            \"userId\": 1,\n            \"id\": 2,\n            \"title\": \"quis ut nam facilis et officia qui\",\n            \"completed\": false,\n            \"time\": '01:13:56'\n        },\n        {\n            \"userId\": 1,\n            \"id\": 3,\n            \"title\": \"fugiat veniam minus\",\n            \"completed\": false,\n            \"time\": '12:53:21'\n        },\n        {\n            \"userId\": 1,\n            \"id\": 4,\n            \"title\": \"et porro tempora\",\n            \"completed\": true,\n            \"time\": '21:32:34'\n        },\n        {\n            \"userId\": 1,\n            \"id\": 5,\n            \"title\": \"laboriosam mollitia et enim quasi adipisci quia provident illum\",\n            \"completed\": false,\n            \"time\": '08:13:21'\n        }\n    ])\n    // const [loading, setLoading] = React.useState(true)\n\n    // useEffect(() => {\n    //     fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n    //         .then(response => response.json())\n    //         .then(todos => {\n    //             setTimeout(() => {\n    //                 setTodos(todos)\n    //                 setLoading(false)\n    //             }, 2000)\n    //         })\n    // }, [])\n\n    function toggleCompleted(id) {\n        setTodos(\n            todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed\n                }\n                return todo\n            })\n        )\n    }\n\n    function removeItem(id) {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    function getClockTime() {\n        let time = {\n            hour: new Date().getHours(),\n            minutes: new Date().getMinutes(),\n            seconds: new Date().getSeconds()\n        }\n\n        if (time.hour < 10) {\n            time.hour = '0' + time.hour\n        }\n        if (time.minutes < 10) {\n            time.minutes = '0' + time.minutes\n        }\n        if (time.seconds < 10) {\n            time.seconds = '0' + time.seconds\n        }\n\n        return `${time.hour}:${time.minutes}:${time.seconds}`\n    }\n\n    const addTodo = title => {\n        setTodos(todos.concat([{\n            title,\n            id: Date.now(),\n            completed: false,\n            time: getClockTime()\n        }]))\n    }\n\n\n    return (\n        <Context.Provider value={{ removeItem }}>\n            <div className=\"AppWrapper\">\n                <h1>To Do Application</h1>\n                <Modal/>\n                <React.Suspense fallback={<p>Loading...</p>}>\n                    <AddTodo onCreate={addTodo}/>\n                </React.Suspense>\n                <ToDoList todos={todos} toggleCompleted={toggleCompleted} removeItem={removeItem} />\n            </div>\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport 'typeface-inconsolata';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}