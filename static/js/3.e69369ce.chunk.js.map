{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/AddTodo/AddTodo.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AddTodo","onCreate","input","defaultValue","React","useState","setValue","bind","onChange","event","clear","useInputValue","className","onSubmit","preventDefault","trim","placeholder","maxLength","type"],"mappings":"mHAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,yCCOMQ,UAtCC,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAiBRC,EAfgB,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACfC,IAAMC,SAASF,GADA,mBAClC7B,EADkC,KAC3BgC,EAD2B,KAGzC,MAAO,CACHC,KAAM,CACFjC,QACAkC,SAAU,SAAAC,GAAK,OAAIH,EAASG,EAAMjB,OAAOlB,SAG7CoC,MAAO,kBAAMJ,EAAS,KAEtBhC,MAAO,kBAAMA,IAIPqC,CAAc,IAW5B,OACI,qBAAKC,UAAW,cAAhB,SACI,uBAAMC,SAXQ,SAACJ,GACnBA,EAAMK,iBAEFZ,EAAM5B,QAAQyC,SACdd,EAASC,EAAM5B,SACf4B,EAAMQ,UAMN,UACI,6BAAWR,EAAMK,MAAjB,IAAuBS,YAAa,qBAAsBC,UAAW,MACrE,wBAAQC,KAAM,SAAd","file":"static/js/3.e69369ce.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React, {useState} from 'react'\r\n\r\nconst AddTodo = ({onCreate}) => {\r\n\r\n    const useInputValue = (defaultValue = '') => {\r\n        const [value, setValue] = React.useState(defaultValue)\r\n\r\n        return {\r\n            bind: {\r\n                value,\r\n                onChange: event => setValue(event.target.value)\r\n            },\r\n\r\n            clear: () => setValue(''),\r\n\r\n            value: () => value\r\n        }\r\n    }\r\n\r\n    const input = useInputValue('')\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        if (input.value().trim()) {\r\n            onCreate(input.value())\r\n            input.clear()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={'formWrapper'}>\r\n            <form onSubmit={submitHandler}>\r\n                <input {...input.bind} placeholder={'Write your task...'} maxLength={50} />\r\n                <button type={\"submit\"}>Add new task!</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTodo"],"sourceRoot":""}